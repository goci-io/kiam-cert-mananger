# The use of certificates managed by cert-manager
# requires you to have the CRDs of cert-manager installed on your cluster.
# The helm release contains all necessary resource definitions:
# https://github.com/goci-io/aws-cert-manager-helm

%{ if deploy_selfsigning_issuer ~}
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: selfsigning-ca
  namespace: kube-system
spec:
  selfSigned: {}

---
%{ endif ~}

apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: ${app_name}-ca
  namespace: kube-system
spec:
  secretName: ${app_name}-ca-tls
  commonName: "${app_name}"
  isCA: true
  issuerRef:
%{ if deploy_selfsigning_issuer ~}
    name: selfsigning-ca
%{ else ~}
    kind: ${issuer_kind}
    name: ${issuer_name}
%{ endif ~}

---

apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: ${app_name}-ca
  namespace: kube-system
spec:
  ca:
    secretName: ${app_name}-ca-tls

---

apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: ${app_name}-agent
  namespace: kube-system
spec:
  secretName: ${app_name}-agent-tls
  commonName: kiam
  duration: 2880h
  issuerRef:
    name: ${app_name}-ca

---

apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: ${app_name}-server
  namespace: kube-system
spec:
  secretName: ${app_name}-server-tls
  duration: 2880h
  commonName: kiam
  issuerRef:
    name: ${app_name}-ca
  dnsNames:
    - kiam-server
    - kiam-server:443
    - localhost
    - localhost:443
    - localhost:9610
  ipAddresses:
    - 127.0.0.1
